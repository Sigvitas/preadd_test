{"ast":null,"code":"import React,{useState}from\"react\";import\"./Mannual.css\";import mammoth from\"mammoth\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Mannual=()=>{const navigate=useNavigate();const[errorMessage,setErrorMessage]=useState(\"\");const[fileName,setFileName]=useState(\"Not Selected\");const[inputValues,setInputValues]=useState([\"\"]);const[text,setText]=useState(\"\");const[Mtitle,setMtitle]=useState(\"\");const[MtitleCount,setMtitleCount]=useState(0);const[section,setSection]=useState([]);const[mLines,setMlines]=useState(0);const[mWords,setMwords]=useState(0);const[mChar,setMchar]=useState(0);const[mSentence,setMsentence]=useState(0);const[mFigure,setMfigure]=useState(0);const[showMfileContent,setShowMfileContent]=useState(false);const[showMclaimContent,setShowMclaimContent]=useState(false);const[mFileContent,setMfileContent]=useState(\"\");const[mTotal,setMtotal]=useState(0);const[mIndependent,setMindependent]=useState(0);const[mDependent,setMdependent]=useState(0);const[mIndependetClaimList,setMindependentClaimList]=useState(\"\");const[mDependentClaimList,setMdependentClaimList]=useState(\"\");const[mTitleChar,setMtitleChar]=useState(0);//to handle user inputs\nconst handleInputChange=(index,value)=>{const updatedValues=[...inputValues];updatedValues[index]=value;setInputValues(updatedValues);};// to add new inputs to array\nconst handleAddInput=()=>{setInputValues([...inputValues,\"\"]);};//function to hide the form\nconst hideForm=()=>{const formhide=document.getElementById(\"formContainer\");formhide.style.display=\"none\";};// to handle the submit function\nconst handleSubmit=event=>{debugger;event.preventDefault();const trimmedValues=inputValues.map(value=>value.trim());if(inputValues.length<1){console.log(\"At least one section title is required.\");return;}//array to store the sections titles\nlet totalWordsCounts=[];const MtitleR=new RegExp(\"([\\\\s\\\\S]*?)\".concat(trimmedValues[0]),\"i\");const MtitleSec=MtitleR.exec(text);if(MtitleSec){const MtitleNames=MtitleSec[1];const MtitleName=MtitleNames.replace(/\\[\\d+\\]/g,\"\");const mwordss=MtitleName.split(/\\s+/).filter(Boolean);const mtitle=MtitleName.replace(/\\s/g,\"\");setMtitleChar(mtitle.length);setMtitle(MtitleName);setMtitleCount(mwordss.length);}setMsentence(text.split(\".\").length);setMlines(text.split(\"\\n\").length);setMchar(text.replace(/\\s/g,\"\").length);setMwords(text.split(/\\s+/).filter(Boolean).length);for(let i=0;i<trimmedValues.length;i++){debugger;const currentSectionTitle=trimmedValues[i];const nextSectionTitle=trimmedValues[i+1];const Mregex=new RegExp(\"\\\\b\".concat(currentSectionTitle,\"\\\\b([\\\\s\\\\S]*?)(\\\\b\").concat(nextSectionTitle,\"\\\\b|TECHNICAL FIELD|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION OF(?: THE)? DRAWINGS|DETAILED DESCRIPTION|CLAIMS|ABSTRACT|$)\"));const sectionSec=Mregex.exec(text);if(sectionSec){const sectionText=sectionSec[1];const filterSectionText=sectionText.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");const wordsForSection=filterSectionText.split(/\\s+/).filter(Boolean);const MwordCount=wordsForSection.length;debugger;totalWordsCounts.push({sectionTitle:currentSectionTitle,wordCount:MwordCount,sectionWords:sectionText});setSection(totalWordsCounts);const drawingWord=new RegExp(\"drawing\",\"i\");totalWordsCounts.forEach(item=>{if(drawingWord.test(item.sectionTitle)){const drwingSection=item.sectionWords;const imageRegex1=/(?:FIG(?:URE)?)\\.?[-\\s]?(?:\\d+|[IVXLCDM]+)[A-Z]?(?:\\([\\w\\s]+\\))?\\b/gi;const matches=drwingSection.match(imageRegex1);const uniqueMatches=[...new Set(matches)];debugger;const matchesWithoutanyWord=uniqueMatches.filter(match=>!/\\bfigured\\b/i.test(match)&&!/\\bfiguring\\b/i.test(match));console.log(\"aa\",matchesWithoutanyWord);const Rx1=matchesWithoutanyWord.length;const figsRomanRegex=/FIGS(?:URES?)?\\.\\s(?:\\d+|[IVXLCDM]+)(?:[A-Za-z]?(?:\\sAND\\s(?:\\d+|[IVXLCDM]+)[A-Za-z]?)+)?/i;const matches2=drwingSection.match(figsRomanRegex);const unique=[...new Set(matches2)];console.log(\"aaa\",unique);const Rx2=unique.length*2;const totalFigs=Rx1+Rx2;setMfigure(totalFigs);}});const claimWord=new RegExp(\"claim\",\"i\");totalWordsCounts.forEach(item=>{debugger;if(claimWord.test(item.sectionTitle)){const claimsection=item.sectionWords;const claimsection1=claimsection.replace(/what is claimedis:/i,\"\");console.log(\"claimssection\",claimsection);const linesa=claimsection1.split(/(?<=\\.)\\s+/).filter(line=>line.includes(\".\"));const filteredLines=linesa.filter(line=>line.trim().length>=40&&!/^\\s*[\\d\\n\\t\\s]+\\.?$|^:\\s*\\n{1,10}CLAIMS\\s*\\n{1,10}1\\./.test(line));console.log(\"claims\",linesa);console.log(\"claims1\",filteredLines);let independentClaimCount=0;let dependentClaimCount=0;const independentClaims=[];const dependentClaims=[];for(let i=0;i<filteredLines.length;i++){const line=filteredLines[i];const words=line.split(/\\s+/).filter(Boolean);const wordCount=words.length;if(/claim\\s+(\\d+)/i.test(line)){dependentClaims.push(\"claim \".concat(i+1,\" - \").concat(wordCount,\" words\"));dependentClaimCount++;}else{independentClaims.push(\"claim \".concat(i+1,\" - \").concat(wordCount,\" words\"));independentClaimCount++;}}setMtotal(filteredLines.length);setMindependent(independentClaimCount);setMdependent(dependentClaimCount);setMindependentClaimList(independentClaims.join(\"\\n\"));setMdependentClaimList(dependentClaims.join(\"\\n \"));}});}else{setErrorMessage(\"Section title not found: \".concat(currentSectionTitle));}}hideForm();};const handleMannualFileChange=async e=>{const file=e.target.files[0];const fileWithdep=e.target.files[0].name;const filename=fileWithdep.replace(\".docx\",\"\");setFileName(filename);if(!file){setErrorMessage(\"Please select a file.\");return;}const reader=new FileReader();reader.onload=async e=>{const content=e.target.result;try{debugger;const result=await mammoth.extractRawText({arrayBuffer:content});setText(result.value);setMfileContent(result.value);console.log(\"manual\",text);}catch(error){setErrorMessage(\"Error reading the .docx file.\");}};reader.onerror=()=>{setErrorMessage(\"Error reading the file.\");};reader.readAsArrayBuffer(file);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),children:\"Go Back\"}),/*#__PURE__*/_jsx(\"div\",{style:{letterSpacing:0,top:0,width:\"100%\",backgroundColor:\"\",color:\"white\",padding:\"20px\",textAlign:\"center\",textDecoration:\"underline\",textDecorationColor:\"#03e9f4\"},children:/*#__PURE__*/_jsx(\"h1\",{children:\"Patent Reader\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleMannualFileChange}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errorMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"formContainer\",id:\"formContainer\",children:[inputValues.map((value,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"formFields\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"inputLable\",htmlFor:\"input-\".concat(index),children:[\"Enter section \",index+1,\" :\",\" \"]}),/*#__PURE__*/_jsx(\"input\",{className:\"inputFields\",type:\"text\",id:\"input-\".concat(index),value:value,required:true,onChange:e=>handleInputChange(index,e.target.value)})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"buttonContainer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleAddInput,className:\"smallButton\",children:\"Add\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"smallButton\",children:\"Submit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Title: \",Mtitle]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Word Count :\",MtitleCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Character Count :\",mTitleChar]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"p\",{children:section.map(item=>/*#__PURE__*/_jsxs(\"div\",{children:[\"\".concat(item.sectionTitle,\":\"),\" \",/*#__PURE__*/_jsx(\"strong\",{children:item.wordCount})]},item.sectionTitle))}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Number of Figures: \",/*#__PURE__*/_jsx(\"strong\",{children:mFigure})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Lines: \",/*#__PURE__*/_jsx(\"strong\",{children:mLines})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Words: \",/*#__PURE__*/_jsx(\"strong\",{children:mWords})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Characters:\",/*#__PURE__*/_jsx(\"strong\",{children:mChar})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Sentence:\",/*#__PURE__*/_jsx(\"strong\",{children:mSentence})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",marginTop:\"2%\"},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowMfileContent(!showMfileContent),children:[showMfileContent?\"hide\":\"view\",\" content\"]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowMclaimContent(!showMclaimContent),children:[showMclaimContent?\"hide\":\"view\",\" Claims\"]})})]}),showMfileContent&&/*#__PURE__*/_jsxs(\"div\",{className:\"file-content\",style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(\"h2\",{style:{color:\"white\",textDecoration:\"underline\",textDecorationColor:\"#03e9f4\"},children:[\"File Content : \",\"  \"+fileName]}),/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:\"pre-wrap\",textAlign:\"left\",backgroundColor:\"white\",margin:\"0\"},children:mFileContent.split(\"\\n\").reduce((acc,line)=>{const trimmedLine=line.trim();const modifiedLine=trimmedLine.replace(/\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\"\");if(modifiedLine){acc.push(modifiedLine);}else if(!acc[acc.length-1]){return acc;}else{acc.push(\"\");}return acc;},[]).join(\"\\n\")})]}),showMclaimContent&&/*#__PURE__*/_jsxs(\"div\",{className:\"claim-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"CLAIMS:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Claims :\",mTotal]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Independent Claims :\",mIndependent]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dependent Claims :\",mDependent]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Independent Claims:\"})}),/*#__PURE__*/_jsx(\"pre\",{children:mIndependetClaimList}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Dependent Claims:\"})}),/*#__PURE__*/_jsx(\"pre\",{children:mDependentClaimList})]})]});};export default Mannual;","map":{"version":3,"names":["React","useState","mammoth","useNavigate","jsx","_jsx","jsxs","_jsxs","Mannual","navigate","errorMessage","setErrorMessage","fileName","setFileName","inputValues","setInputValues","text","setText","Mtitle","setMtitle","MtitleCount","setMtitleCount","section","setSection","mLines","setMlines","mWords","setMwords","mChar","setMchar","mSentence","setMsentence","mFigure","setMfigure","showMfileContent","setShowMfileContent","showMclaimContent","setShowMclaimContent","mFileContent","setMfileContent","mTotal","setMtotal","mIndependent","setMindependent","mDependent","setMdependent","mIndependetClaimList","setMindependentClaimList","mDependentClaimList","setMdependentClaimList","mTitleChar","setMtitleChar","handleInputChange","index","value","updatedValues","handleAddInput","hideForm","formhide","document","getElementById","style","display","handleSubmit","event","preventDefault","trimmedValues","map","trim","length","console","log","totalWordsCounts","MtitleR","RegExp","concat","MtitleSec","exec","MtitleNames","MtitleName","replace","mwordss","split","filter","Boolean","mtitle","i","currentSectionTitle","nextSectionTitle","Mregex","sectionSec","sectionText","filterSectionText","wordsForSection","MwordCount","push","sectionTitle","wordCount","sectionWords","drawingWord","forEach","item","test","drwingSection","imageRegex1","matches","match","uniqueMatches","Set","matchesWithoutanyWord","Rx1","figsRomanRegex","matches2","unique","Rx2","totalFigs","claimWord","claimsection","claimsection1","linesa","line","includes","filteredLines","independentClaimCount","dependentClaimCount","independentClaims","dependentClaims","words","join","handleMannualFileChange","e","file","target","files","fileWithdep","name","filename","reader","FileReader","onload","content","result","extractRawText","arrayBuffer","error","onerror","readAsArrayBuffer","className","children","onClick","letterSpacing","top","width","backgroundColor","color","padding","textAlign","textDecoration","textDecorationColor","type","onChange","onSubmit","id","htmlFor","required","flexDirection","justifyContent","marginTop","whiteSpace","margin","reduce","acc","trimmedLine","modifiedLine"],"sources":["/workspaces/preadd_test/src/Mannual.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Mannual.css\";\r\nimport mammoth from \"mammoth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Mannual = () => {\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"Not Selected\");\r\n  const [inputValues, setInputValues] = useState([\"\"]);\r\n  const [text, setText] = useState(\"\");\r\n  const [Mtitle, setMtitle] = useState(\"\");\r\n  const [MtitleCount, setMtitleCount] = useState(0);\r\n  const [section, setSection] = useState([]);\r\n  const [mLines, setMlines] = useState(0);\r\n  const [mWords, setMwords] = useState(0);\r\n  const [mChar, setMchar] = useState(0);\r\n  const [mSentence, setMsentence] = useState(0);\r\n  const [mFigure, setMfigure] = useState(0);\r\n  const [showMfileContent, setShowMfileContent] = useState(false);\r\n  const [showMclaimContent, setShowMclaimContent] = useState(false);\r\n  const [mFileContent, setMfileContent] = useState(\"\");\r\n  const [mTotal,setMtotal] = useState(0);\r\n  const [mIndependent,setMindependent] = useState(0);\r\n  const [mDependent,setMdependent] = useState(0);\r\n  const [mIndependetClaimList,setMindependentClaimList] = useState(\"\");\r\n  const [mDependentClaimList,setMdependentClaimList] = useState(\"\");\r\n  const [mTitleChar,setMtitleChar] = useState(0);\r\n\r\n  //to handle user inputs\r\n  const handleInputChange = (index, value) => {\r\n    const updatedValues = [...inputValues];\r\n    updatedValues[index] = value;\r\n    setInputValues(updatedValues);\r\n  };\r\n// to add new inputs to array\r\n  const handleAddInput = () => {\r\n    setInputValues([...inputValues, \"\"]);\r\n  };\r\n  //function to hide the form\r\n  const hideForm = () => {\r\n    const formhide = document.getElementById(\"formContainer\");\r\n    formhide.style.display = \"none\";\r\n  };\r\n// to handle the submit function\r\n  const handleSubmit = (event) => {\r\n    debugger;\r\n    event.preventDefault();\r\n    const trimmedValues = inputValues.map((value) => value.trim());\r\n\r\n    if (inputValues.length < 1) {\r\n      console.log(\"At least one section title is required.\");\r\n      return;\r\n    }\r\n//array to store the sections titles\r\n\r\n    let totalWordsCounts = [];\r\n    const MtitleR = new RegExp(`([\\\\s\\\\S]*?)${trimmedValues[0]}`, \"i\");\r\n    const MtitleSec = MtitleR.exec(text);\r\n    if (MtitleSec) {\r\n      const MtitleNames = MtitleSec[1];\r\n      const MtitleName = MtitleNames.replace(/\\[\\d+\\]/g, \"\");\r\n      const mwordss = MtitleName.split(/\\s+/).filter(Boolean);\r\n      const mtitle = MtitleName.replace(/\\s/g,\"\");\r\n      setMtitleChar(mtitle.length);\r\n      setMtitle(MtitleName);\r\n      setMtitleCount(mwordss.length);\r\n    }\r\n    setMsentence(text.split(\".\").length);\r\n    setMlines(text.split(\"\\n\").length);\r\n    setMchar(text.replace(/\\s/g, \"\").length);\r\n    setMwords(text.split(/\\s+/).filter(Boolean).length);\r\n\r\n    for (let i = 0; i < trimmedValues.length; i++) {\r\n      debugger;\r\n      const currentSectionTitle = trimmedValues[i];\r\n      const nextSectionTitle = trimmedValues[i + 1];\r\n\r\n      const Mregex = new RegExp(\r\n        `\\\\b${currentSectionTitle}\\\\b([\\\\s\\\\S]*?)(\\\\b${nextSectionTitle}\\\\b|TECHNICAL FIELD|FIELD|BACKGROUND|SUMMARY|BRIEF DESCRIPTION OF(?: THE)? DRAWINGS|DETAILED DESCRIPTION|CLAIMS|ABSTRACT|$)`\r\n\r\n       \r\n      );\r\n      const sectionSec = Mregex.exec(text);\r\n      if (sectionSec) {\r\n        const sectionText = sectionSec[1];\r\n        const filterSectionText = sectionText.replace(\r\n          /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\r\n          \"\"\r\n        );\r\n        const wordsForSection = filterSectionText.split(/\\s+/).filter(Boolean);\r\n        const MwordCount = wordsForSection.length;\r\n        debugger\r\n        totalWordsCounts.push({\r\n          sectionTitle: currentSectionTitle,\r\n          wordCount: MwordCount,\r\n          sectionWords:sectionText,\r\n        });\r\n        setSection(totalWordsCounts);\r\n\r\n        const drawingWord = new RegExp(\"drawing\",\"i\");\r\n        totalWordsCounts.forEach(item=>{\r\n          if(drawingWord.test(item.sectionTitle)){\r\n            const drwingSection = item.sectionWords\r\n            const imageRegex1 =\r\n            /(?:FIG(?:URE)?)\\.?[-\\s]?(?:\\d+|[IVXLCDM]+)[A-Z]?(?:\\([\\w\\s]+\\))?\\b/gi;\r\n          const matches = drwingSection.match(imageRegex1);\r\n          const uniqueMatches = [...new Set(matches)];\r\n          debugger;\r\n          const matchesWithoutanyWord = uniqueMatches.filter(\r\n            (match) =>\r\n              !/\\bfigured\\b/i.test(match) && !/\\bfiguring\\b/i.test(match)\r\n          );\r\n\r\n          console.log(\"aa\", matchesWithoutanyWord);\r\n          const Rx1 = matchesWithoutanyWord.length;\r\n\r\n          const figsRomanRegex =\r\n            /FIGS(?:URES?)?\\.\\s(?:\\d+|[IVXLCDM]+)(?:[A-Za-z]?(?:\\sAND\\s(?:\\d+|[IVXLCDM]+)[A-Za-z]?)+)?/i;\r\n\r\n          const matches2 = drwingSection.match(figsRomanRegex);\r\n          const unique = [...new Set(matches2)];\r\n          console.log(\"aaa\", unique);\r\n          const Rx2 = unique.length * 2;\r\n          const totalFigs = Rx1 + Rx2;\r\n          setMfigure(totalFigs);\r\n          }\r\n        })\r\n\r\n     \r\n        const claimWord = new RegExp(\"claim\",\"i\");\r\n       \r\n        totalWordsCounts.forEach(item =>{\r\n          debugger\r\n          if(claimWord.test(item.sectionTitle)){\r\n           const claimsection = item.sectionWords\r\n           const claimsection1 = claimsection.replace(\r\n            /what is claimedis:/i, \"\"\r\n           )\r\n       \r\n          console.log(\"claimssection\",claimsection)\r\n\r\n          const linesa = claimsection1\r\n            .split(/(?<=\\.)\\s+/)\r\n            .filter((line) => line.includes(\".\"));\r\n        const filteredLines = linesa.filter(\r\n            (line) =>\r\n              line.trim().length >= 40 &&\r\n              !/^\\s*[\\d\\n\\t\\s]+\\.?$|^:\\s*\\n{1,10}CLAIMS\\s*\\n{1,10}1\\./.test(\r\n                line\r\n              ) \r\n          );\r\n\r\n          console.log(\"claims\", linesa);\r\n          console.log(\"claims1\", filteredLines);\r\n\r\n          let independentClaimCount = 0;\r\n          let dependentClaimCount = 0;\r\n          const independentClaims = [];\r\n          const dependentClaims = [];\r\n\r\n          for (let i = 0; i < filteredLines.length; i++) {\r\n            const line = filteredLines[i];\r\n            const words = line.split(/\\s+/).filter(Boolean);\r\n            const wordCount = words.length;\r\n            if (/claim\\s+(\\d+)/i.test(line)) {\r\n              dependentClaims.push(`claim ${i + 1} - ${wordCount} words`);\r\n              dependentClaimCount++;\r\n            } else {\r\n              independentClaims.push(`claim ${i + 1} - ${wordCount} words`);\r\n              independentClaimCount++;\r\n            }\r\n          }\r\n\r\n          setMtotal(filteredLines.length);\r\n          setMindependent(independentClaimCount);\r\n          setMdependent(dependentClaimCount);\r\n          setMindependentClaimList(independentClaims.join(\"\\n\"));\r\n          setMdependentClaimList(dependentClaims.join(\"\\n \"));\r\n          \r\n        }\r\n        })\r\n      } else {\r\n        setErrorMessage(`Section title not found: ${currentSectionTitle}`);\r\n      }\r\n    }\r\n  hideForm();\r\n  };\r\n  \r\n  const handleMannualFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const fileWithdep = e.target.files[0].name;\r\n    const filename = fileWithdep.replace(\".docx\", \"\");\r\n    setFileName(filename);\r\n    if (!file) {\r\n      setErrorMessage(\"Please select a file.\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (e) => {\r\n      const content = e.target.result;\r\n      try {\r\n        debugger;\r\n        const result = await mammoth.extractRawText({ arrayBuffer: content });\r\n         setText(result.value);\r\n    setMfileContent(result.value);\r\n\r\n        console.log(\"manual\", text);\r\n      } catch (error) {\r\n        setErrorMessage(\"Error reading the .docx file.\");\r\n      }\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      setErrorMessage(\"Error reading the file.\");\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={() => navigate(\"/\")}>Go Back</button>\r\n      <div\r\n        style={{\r\n          letterSpacing: 0,\r\n          top: 0,\r\n          width: \"100%\",\r\n          backgroundColor: \"\",\r\n          color: \"white\",\r\n          padding: \"20px\",\r\n          textAlign: \"center\",\r\n          textDecoration: \"underline\",\r\n          textDecorationColor: \"#03e9f4\",\r\n        }}\r\n      >\r\n        <h1>Patent Reader</h1>\r\n      </div>\r\n      <input type=\"file\" onChange={handleMannualFileChange} />\r\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"formContainer\"\r\n        id=\"formContainer\"\r\n      >\r\n        {inputValues.map((value, index) => (\r\n          <div key={index} className=\"formFields\">\r\n            <label className=\"inputLable\" htmlFor={`input-${index}`}>\r\n              Enter section {index + 1} :{\" \"}\r\n            </label>\r\n            <input\r\n              className=\"inputFields\"\r\n              type=\"text\"\r\n              id={`input-${index}`}\r\n              value={value}\r\n              required\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <div className=\"buttonContainer\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAddInput}\r\n            className=\"smallButton\"\r\n          >\r\n            Add\r\n          </button>\r\n          <button type=\"submit\" className=\"smallButton\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"result\">\r\n        <p>Title: {Mtitle}</p>\r\n        <p> Word Count :{MtitleCount}</p>\r\n        <p>Character Count :{mTitleChar}</p>\r\n      </div>\r\n      <div className=\"result\">\r\n        <p>\r\n          {section.map((item) => (\r\n            <div key={item.sectionTitle}>\r\n              {`${item.sectionTitle}:`} <strong>{item.wordCount}</strong>\r\n            </div>\r\n          ))}\r\n        </p>\r\n        <p> Total Number of Figures: <strong>{mFigure}</strong></p>\r\n        <p> Total Lines: <strong>{mLines}</strong></p>\r\n        <p> Total Words: <strong>{mWords}</strong></p>\r\n        <p> Total Characters:<strong>{mChar}</strong></p>\r\n        <p> Total Sentence:<strong>{mSentence}</strong></p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: \"2%\",\r\n        }}\r\n      >\r\n        <div>\r\n          <button onClick={() => setShowMfileContent(!showMfileContent)}>\r\n            {showMfileContent ? \"hide\" : \"view\"} content\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => setShowMclaimContent(!showMclaimContent)}>\r\n            {showMclaimContent ? \"hide\" : \"view\"} Claims\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showMfileContent && (\r\n        <div className=\"file-content\" style={{ textAlign: \"center\" }}>\r\n          <h2\r\n            style={{\r\n              color: \"white\",\r\n              textDecoration: \"underline\",\r\n              textDecorationColor: \"#03e9f4\",\r\n            }}\r\n          >\r\n            File Content : {\"  \" + fileName}\r\n          </h2>\r\n          <p\r\n            style={{\r\n              whiteSpace: \"pre-wrap\",\r\n              textAlign: \"left\",\r\n              backgroundColor: \"white\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {mFileContent\r\n              .split(\"\\n\")\r\n              .reduce((acc, line) => {\r\n                const trimmedLine = line.trim();\r\n                const modifiedLine = trimmedLine.replace(\r\n                  /\\[\\d+\\]|\\b(?:[1-4]|[6-9])?\\d{1,}(?:(?<!\\[\\d+)\\b5\\b)?\\b/g,\r\n                  \"\"\r\n                );\r\n                if (modifiedLine) {\r\n                  acc.push(modifiedLine);\r\n                } else if (!acc[acc.length - 1]) {\r\n                  return acc;\r\n                } else {\r\n                  acc.push(\"\");\r\n                }\r\n                return acc;\r\n              }, [])\r\n              .join(\"\\n\")}\r\n          </p>\r\n        </div>\r\n      )}\r\n {showMclaimContent && (\r\n        <div className=\"claim-content\">\r\n          <h2>CLAIMS:</h2>\r\n          <p>Total Claims :{mTotal}</p>\r\n          <p>Independent Claims :{mIndependent}</p>\r\n          <p>Dependent Claims :{mDependent}</p>\r\n          <p>\r\n            <b>Independent Claims:</b>\r\n          </p>\r\n          <pre>{mIndependetClaimList}</pre>\r\n          <p>\r\n            <b>Dependent Claims:</b>\r\n          </p>\r\n          <pre>{mDependentClaimList}</pre>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mannual;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}